---
import { getLanguageFromURL, KNOWN_LANGUAGE_CODES } from "../../languages";
import * as CONFIG from "../../config";
import SkipToContent from "./SkipToContent.astro";
import SidebarToggle from "./SidebarToggle";
import LanguageSelect from "./LanguageSelect";
import ThemeToggleButton from "../../components/RightSidebar/ThemeToggleButton";
import BottomNavbar from "../BottomNavbar/BottomNavbar.astro";
import { SIDEBAR } from "../../config";

type Props = {
  currentPage: string;
};

const { currentPage } = Astro.props as Props;
const currentPageMatch = currentPage.endsWith('/')
	? currentPage.slice(1, -1)
	: currentPage.slice(1);

const langCode = getLanguageFromURL(currentPage);
const sidebar = SIDEBAR[langCode];
---

<>
  <header>
    <SkipToContent />
    <nav class="nav-wrapper" title="Top Navigation">
      <div class="logo flex">
        <a href="/">
          <h1>{CONFIG.SITE.title ?? "Documentation"}</h1>
        </a>
      </div>
        <div class="invisible lg:visible mr-5">
          {
            Object.entries(sidebar).map(([header, children]) => (
                <div class="flex gap-7">
                    {children.map((child) => {
                      const url = Astro.site?.pathname + child.link;
                      return (
                        <div>
                          <a
                            href={url}
                            class="text-lg font-semibold color-gray-300 hover:color-white"
                            aria-current={ currentPageMatch === child.link ? "page" : false
                            }
                          >
                            {child.text}
                          </a>
                        </div>
                      );
                    })}
                </div>
            ))
          }
          </div>
            <ThemeToggleButton client:visible />
    </nav>
  </header>
  <BottomNavbar />
</>

<style>
  header {
    z-index: 11;
    height: var(--theme-navbar-height);
    width: 100%;
    background-color: var(--theme-navbar-bg);
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    position: sticky;
    top: 0;
  }

  .logo {
    flex: 1;
    display: flex;
    overflow: hidden;
    width: 30px;
    font-size: 2rem;
    flex-shrink: 0;
    font-weight: 600;
    line-height: 1;
    color: hsla(var(--color-base-white), 100%, 1);
    gap: 0.25em;
    z-index: -1;
  }

  .logo a {
    display: flex;
    padding: 0.5em 0.25em;
    margin: -0.5em -0.25em;
    text-decoration: none;
    font-weight: bold;
  }

  .logo a {
    transition: color 100ms ease-out;
    color: var(--theme-text);
  }

  .logo a:hover,
  .logo a:focus {
    color: var(--theme-text-accent);
  }

  .logo h1 {
    display: none;
    font: inherit;
    color: inherit;
    margin: 0;
  }

  .nav-wrapper {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: 1em;
    width: 100%;
    max-width: 82em;
    padding: 0 1rem;
  }

  @media (min-width: 50em) {
    header {
      position: static;
      padding: 2rem 0rem;
    }

    .logo {
      width: auto;
      margin: 0;
      z-index: 0;
    }

    .logo h1 {
      display: initial;
    }

    .menu-toggle {
      display: none;
    }
  }

</style>
